"""Initial

Revision ID: 2a37f591421a
Revises:
Create Date: 2025-10-30 22:12:04.691222

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "2a37f591421a"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "company",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("linkedin", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("glassdoor", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("github", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("size", sa.Integer(), nullable=True),
        sa.Column(
            "type_",
            sa.Enum(
                "SEED",
                "SERIES_A",
                "SERIES_B",
                "SERIES_C",
                "SERIES_D",
                "SERIES_E",
                "SERIES_X",
                "LLC",
                "B_CORP",
                "S_CORP",
                "NON_PROFIT",
                "PUBLIC",
                "UNKNOWN",
                name="companytype",
            ),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "opportunity",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("company_id", sa.Uuid(), nullable=False),
        sa.Column("position", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("team", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("team_size", sa.Integer(), nullable=True),
        sa.Column("team_size_growth", sa.Integer(), nullable=True),
        sa.Column("remote", sa.Boolean(), nullable=True),
        sa.Column("hybrid", sa.Boolean(), nullable=True),
        sa.Column("comp_base_range", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("total_comp", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("equity", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("longer_hours", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["company.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "process",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.Column("opportunity_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["opportunity.id"],
        ),
    )
    op.create_table(
        "processitem",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "type_",
            sa.Enum(
                "SCREEN_RECRUITER",
                "SCREEN_HIRING_MANAGER",
                "SCREEN_TECHNICAL",
                "SCREEN_OTHER",
                "TECHNICAL_CODING",
                "TECHNICAL_DESIGN",
                "TECHNICAL_TAKE_HOME",
                "TECHNICAL_OTHER",
                "PANEL",
                "PRODUCT",
                "EXECUTIVE",
                "UNKNOWN",
                name="processitemtype",
            ),
            nullable=False,
        ),
        sa.Column("location", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("with_", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("group", sa.Boolean(), nullable=False),
        sa.Column("process_id", sa.Uuid(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["process_id"],
            ["process.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("processitem")
    op.drop_table("process")
    op.drop_table("opportunity")
    op.drop_table("company")
    op.execute("DROP TYPE processitemtype")
    op.execute("DROP TYPE companytype")
    # ### end Alembic commands ###
